//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#define BASE 0
#define MATH 1
#define SYMB 2
#define ADJU  3

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        l_br {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <15 16>;
            layers = <2>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <26 27>;
            layers = <2>;
        };

        l_sq_br {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <5 6>;
            layers = <2>;
        };

        r_br {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <18 19>;
            layers = <2>;
        };

        f_for {
            bindings = <&kp F4>;
            key-positions = <9 9 19>;
            layers = <2>;
        };

        r_sq_br {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <9 8>;
            layers = <2>;
        };

        t2 {
            bindings = <&tog 2>;
            key-positions = <32 37>;
        };
    };

    behaviors {
        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        td_dots: td_dots {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_DOTS";
            #binding-cells = <0>;
            bindings = <&kp KP_DOT>, <&kp SEMICOLON>, <&kp LS(SEMICOLON)>;
        };

        td_bslash: td_bslash {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_BSLASH";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SLASH>, <&kp BACKSLASH>;
        };

        td_tilda: td_tilda {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_TILDA";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SQT>, <&kp GRAVE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "BASE";
            bindings = <
                 &kp Q            &kp W        &kp E         &kp R                 &kp T          &kp Y      &kp U                      &kp I         &kp O        &kp P
                 &hrm LEFT_GUI A  &hrm LALT S  &hrm LCTRL D  &hrm LSHFT F          &kp G          &kp H      &hrm RSHFT J               &hrm RCTRL K  &hrm RALT L  &hrm RGUI SEMICOLON
&kh_hs_tapdance  &kp Z            &kp X        &kp C         &kp V                 &kp B          &kp N      &kp M                      &kp COMMA     &kp DOT      &td_bslash           &td_tilda
                                               &lt 2 TAB     &mt LEFT_SHIFT SPACE  &lt 1 ENTER    &lt 1 ESC  &mt RIGHT_SHIFT BACKSPACE  &lt 2 DELETE
            >;
        };

        lower {
            label = "lower";
            bindings = <
           &kp F1                     &kp F2                 &kp F3                  &kp F4                  &kp F5         &kp F6     &kp F7                      &kp F8           &kp F9                           &kp F10
           &hrm LEFT_GUI EXCLAMATION  &hrm LEFT_ALT AT_SIGN  &hrm LEFT_CONTROL HASH  &hrm LEFT_SHIFT DOLLAR  &kp PERCENT    &kp CARET  &hrm RIGHT_SHIFT AMPERSAND  &hrm RCTRL STAR  &hrm RIGHT_ALT LEFT_PARENTHESIS  &hrm RMETA RIGHT_PARENTHESIS
&kp MINUS  &kp N1                     &kp N2                 &kp N3                  &kp N4                  &kp N5         &kp N6     &kp N7                      &kp N8           &kp N9                           &kp N0                        &kp F11
                                                             &lt 3 TAB               &trans                  &trans         &trans     &trans                      &lt 3 DELETE
            >;
        };

        raise {
            bindings = <
              &kp HOME          &kp PAGE_DOWN     &kp PG_UP             &kp END            &mkp MCLK      &kp KP_MINUS  &kp KP_N7               &kp KP_N8                 &kp KP_N9                   &kp KP_SLASH
              &kp LEFT          &kp DOWN          &kp UP_ARROW          &kp RIGHT          &mkp RCLK      &kp KP_PLUS   &hrm RIGHT_SHIFT KP_N4  &hrm RIGHT_CONTROL KP_N5  &hrm RIGHT_ALT KP_NUMBER_6  &kp KP_MULTIPLY
&kp CAPSLOCK  &kp LC(LS(LEFT))  &kp LS(LC(DOWN))  &kp LS(LC(UP_ARROW))  &kp LS(LC(RIGHT))  &mkp LCLK      &kp KP_N0     &kp KP_N1               &kp KP_N2                 &kp KP_N3                   &td_dots         &kp KP_NUM
                                                  &trans                &trans             &lt 3 ENTER    &lt 3 ESCAPE  &trans                  &trans
            >;
        };

        adj {
            label = "ADJ";
            bindings = <
            &bootloader   &none         &none         &none         &none           &none         &none         &none         &none         &bootloader
            &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0
&bt BT_CLR  &sys_reset    &none         &none         &none         &none           &none         &none         &none         &none         &sys_reset    &bt BT_CLR
                                        &trans        &none         &trans          &trans        &none         &trans
            >;
        };
    };
};
